/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VerifyAccountImport } from './routes/verify-account'
import { Route as SignUpImport } from './routes/sign-up'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as ProfileImport } from './routes/profile'
import { Route as NewPollImport } from './routes/new-poll'
import { Route as LoginImport } from './routes/login'
import { Route as ForgotPasswordImport } from './routes/forgot-password'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as PollsIdImport } from './routes/polls/$id'
import { Route as AuthUsersImport } from './routes/_auth.users'
import { Route as AuthAdminImport } from './routes/_auth.admin'

// Create/Update Routes

const VerifyAccountRoute = VerifyAccountImport.update({
  id: '/verify-account',
  path: '/verify-account',
  getParentRoute: () => rootRoute,
} as any)

const SignUpRoute = SignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const NewPollRoute = NewPollImport.update({
  id: '/new-poll',
  path: '/new-poll',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ForgotPasswordRoute = ForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PollsIdRoute = PollsIdImport.update({
  id: '/polls/$id',
  path: '/polls/$id',
  getParentRoute: () => rootRoute,
} as any)

const AuthUsersRoute = AuthUsersImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAdminRoute = AuthAdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/new-poll': {
      id: '/new-poll'
      path: '/new-poll'
      fullPath: '/new-poll'
      preLoaderRoute: typeof NewPollImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpImport
      parentRoute: typeof rootRoute
    }
    '/verify-account': {
      id: '/verify-account'
      path: '/verify-account'
      fullPath: '/verify-account'
      preLoaderRoute: typeof VerifyAccountImport
      parentRoute: typeof rootRoute
    }
    '/_auth/admin': {
      id: '/_auth/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthAdminImport
      parentRoute: typeof AuthImport
    }
    '/_auth/users': {
      id: '/_auth/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthUsersImport
      parentRoute: typeof AuthImport
    }
    '/polls/$id': {
      id: '/polls/$id'
      path: '/polls/$id'
      fullPath: '/polls/$id'
      preLoaderRoute: typeof PollsIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthAdminRoute: typeof AuthAdminRoute
  AuthUsersRoute: typeof AuthUsersRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAdminRoute: AuthAdminRoute,
  AuthUsersRoute: AuthUsersRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/new-poll': typeof NewPollRoute
  '/profile': typeof ProfileRoute
  '/reset-password': typeof ResetPasswordRoute
  '/sign-up': typeof SignUpRoute
  '/verify-account': typeof VerifyAccountRoute
  '/admin': typeof AuthAdminRoute
  '/users': typeof AuthUsersRoute
  '/polls/$id': typeof PollsIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/new-poll': typeof NewPollRoute
  '/profile': typeof ProfileRoute
  '/reset-password': typeof ResetPasswordRoute
  '/sign-up': typeof SignUpRoute
  '/verify-account': typeof VerifyAccountRoute
  '/admin': typeof AuthAdminRoute
  '/users': typeof AuthUsersRoute
  '/polls/$id': typeof PollsIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/new-poll': typeof NewPollRoute
  '/profile': typeof ProfileRoute
  '/reset-password': typeof ResetPasswordRoute
  '/sign-up': typeof SignUpRoute
  '/verify-account': typeof VerifyAccountRoute
  '/_auth/admin': typeof AuthAdminRoute
  '/_auth/users': typeof AuthUsersRoute
  '/polls/$id': typeof PollsIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/forgot-password'
    | '/login'
    | '/new-poll'
    | '/profile'
    | '/reset-password'
    | '/sign-up'
    | '/verify-account'
    | '/admin'
    | '/users'
    | '/polls/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/forgot-password'
    | '/login'
    | '/new-poll'
    | '/profile'
    | '/reset-password'
    | '/sign-up'
    | '/verify-account'
    | '/admin'
    | '/users'
    | '/polls/$id'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/forgot-password'
    | '/login'
    | '/new-poll'
    | '/profile'
    | '/reset-password'
    | '/sign-up'
    | '/verify-account'
    | '/_auth/admin'
    | '/_auth/users'
    | '/polls/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  ForgotPasswordRoute: typeof ForgotPasswordRoute
  LoginRoute: typeof LoginRoute
  NewPollRoute: typeof NewPollRoute
  ProfileRoute: typeof ProfileRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  SignUpRoute: typeof SignUpRoute
  VerifyAccountRoute: typeof VerifyAccountRoute
  PollsIdRoute: typeof PollsIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  ForgotPasswordRoute: ForgotPasswordRoute,
  LoginRoute: LoginRoute,
  NewPollRoute: NewPollRoute,
  ProfileRoute: ProfileRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  SignUpRoute: SignUpRoute,
  VerifyAccountRoute: VerifyAccountRoute,
  PollsIdRoute: PollsIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/forgot-password",
        "/login",
        "/new-poll",
        "/profile",
        "/reset-password",
        "/sign-up",
        "/verify-account",
        "/polls/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/admin",
        "/_auth/users"
      ]
    },
    "/forgot-password": {
      "filePath": "forgot-password.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/new-poll": {
      "filePath": "new-poll.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/reset-password": {
      "filePath": "reset-password.tsx"
    },
    "/sign-up": {
      "filePath": "sign-up.tsx"
    },
    "/verify-account": {
      "filePath": "verify-account.tsx"
    },
    "/_auth/admin": {
      "filePath": "_auth.admin.tsx",
      "parent": "/_auth"
    },
    "/_auth/users": {
      "filePath": "_auth.users.tsx",
      "parent": "/_auth"
    },
    "/polls/$id": {
      "filePath": "polls/$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
